{"version":3,"file":"static/js/151.a8c33972.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["//export const selectLoading = state => state.tasks.loading;\n\n//export const selectFilter = state => state.tasks.filter;\n\n//export const selectAllTasks = state => state.tasks.items;\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectValueFilter = state => state.contacts.filter;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { onFilter } from 'redux/contacts/slice';\nimport { selectValueFilter } from 'redux/contacts/selectors';\nimport { FormControl, FormLabel, Input } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const filter = useSelector(selectValueFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FormControl\n      as=\"div\"\n      fontSize=\"20px\"\n      fontFamily=\"Raleway, sans-serif\"\n      fontWeight=\"700\"\n    >\n      <FormLabel\n        as=\"div\"\n        htmlFor=\"filter\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        gap=\"4px\"\n        color=\"purple\"\n        fontSize=\"20px\"\n        fontFamily=\"Raleway, sans-serif\"\n        fontWeight=\"700\"\n      >\n        Find contacts by name\n      </FormLabel>\n      <Input\n        as=\"input\"\n        name=\"filter\"\n        type=\"text\"\n        id=\"filter\"\n        value={filter}\n        onChange={e => dispatch(onFilter(e.currentTarget.value))}\n        placeholder=\"Contact name\"\n        boxShadow=\"md\"\n        bgGradient={[\n          'linear(to-tr, teal.300, yellow.400)',\n          'linear(to-t, blue.200, teal.500)',\n          'linear(to-b, orange.100, purple.300)',\n        ]}\n        outline=\"none\"\n        w=\"256px\"\n        _hover={{\n          border: '1px',\n          borderColor: '#9370DB',\n        }}\n      />\n    </FormControl>\n  );\n};\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { customAlphabet } from 'nanoid';\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n} from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst nanoid = customAlphabet('1234567890abcdef', 10);\n\nlet phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nlet nameRegExp = /[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .matches(\n      phoneRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst initualValues = {\n  id: '',\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n console.log(contacts);\n\n const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      id: 'id-' + nanoid(),\n      name: values.name,\n      number: values.number,\n    };\n    \n     if (contacts.some(contact => contact.name === newContact.name)) {\n      return alert(`Contact ${newContact.name} has already been registrated.`);\n    }\n     dispatch(addContact(newContact));\n    resetForm();\n  };\n   \n   \n\n  return (\n    <Formik\n      initialValues={initualValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form\n        as={FormControl}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        gap=\"4px\"\n      >\n        <FormLabel\n          htmlFor=\"name\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          gap=\"4px\"\n          color=\"purple\"\n          fontSize=\"20px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"700\"\n        >\n          Name\n          <Field\n            as={Input}\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Name\"\n            boxShadow=\"md\"\n            bgGradient={[\n              'linear(to-tr, teal.300, yellow.400)',\n              'linear(to-t, blue.200, teal.500)',\n              'linear(to-b, orange.100, purple.300)',\n            ]}\n            _hover={{\n              border: '1px',\n              borderColor: '#9370DB',\n            }}\n            w=\"256px\"\n          />\n          <ErrorMessage\n            as={FormErrorMessage}\n            color=\"#DE5D83\"\n            name=\"name\"\n            component=\"div\"\n          />\n        </FormLabel>\n        <FormLabel\n          htmlFor=\"number\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          gap=\"4px\"\n          color=\"purple\"\n          fontSize=\"20px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"700\"\n        >\n          Number\n          <Field\n            as={Input}\n            id=\"number\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Phone number\"\n            boxShadow=\"md\"\n            bgGradient={[\n              'linear(to-tr, teal.300, yellow.400)',\n              'linear(to-t, blue.200, teal.500)',\n              'linear(to-b, orange.100, purple.300)',\n            ]}\n            w=\"256px\"\n            _hover={{\n              border: '1px',\n              borderColor: '#9370DB',\n            }}\n          />\n          <ErrorMessage\n            as={FormErrorMessage}\n            color=\"purple\"\n            name=\"number\"\n            component=\"div\"\n          />\n        </FormLabel>\n        <Button\n          as=\"button\"\n          type=\"submit\"\n          fontSize=\"20px\"\n          bgGradient={[\n            'linear(to-tr, teal.300, yellow.400)',\n            'linear(to-t, blue.200, teal.500)',\n            'linear(to-b, orange.100, purple.300)',\n          ]}\n          size=\"md\"\n          mb=\"20px\"\n          boxShadow=\"md\"\n          _hover={{\n            bg: 'purple.300',\n            color: 'purple.100',\n            border: '1px',\n            borderColor: '#9370DB',\n          }}\n        >\n          Add contact\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  Button,\n  Text,\n  Avatar\n} from '@chakra-ui/react';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <Text\n      as=\"li\"\n      key={id}\n      fontSize=\"30px\"\n      fontFamily=\"Raleway, sans-serif\"\n      fontWeight=\"400\"\n      mt=\"10px\"\n      display=\"flex\"\n      justifyContent=\"space-between\"\n    >\n      <Avatar name=\"contact\" src=\"contact_book2.png\" />\n      {name}:<Text as=\"span\">{number}</Text>\n      <Button\n        as=\"button\"\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n        borderRadius=\"5px\"\n        fontSize=\"20px\"\n        bgGradient={[\n          'linear(to-tr, teal.300, yellow.400)',\n          'linear(to-t, blue.200, teal.500)',\n          'linear(to-b, orange.100, purple.300)',\n        ]}\n        size=\"md\"\n        ml=\"5px\"\n        boxShadow=\"md\"\n        _hover={{\n          background: 'purple.400',\n          color: 'purple.100',\n          border: '1px',\n          borderColor: '#9370DB',\n        }}\n      >\n        Delete\n      </Button>\n    </Text>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Contact } from 'components/Contact/Contact';\nimport { Box } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectValueFilter, selectContacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectValueFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  console.log(contacts);\n\n  const filteredContacts = filter\n    ? contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase().trim())\n      )\n    : contacts;\n\n  return (\n    <Box\n      as=\"ul\"\n      alignItems=\"center\"\n      listStyleType=\"none\"\n      color=\"purple\"\n      backgroundColor=\"#F0F0F0\"\n    >\n      {filteredContacts.map(({ id, name, number }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </Box>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Filter } from 'components/Filter';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { AiOutlineApple } from 'react-icons/ai';\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai';\nimport { Box, Flex, Heading } from '@chakra-ui/react';\n\nexport default function Contacts() {\n  return (\n    <Box\n      as=\"div\"\n      minH=\"calc(100vh - 50px)\"\n      backgroundColor=\"#F0F0F0\"\n      p=\"16px\"\n      textAlign=\"center\"\n      m=\"10px auto\"\n      borderRadius=\"10px\"\n      boxShadow=\"dark-lg\"\n      lineHeight=\"1.8\"\n    >\n      <Flex as=\"div\" alignItems=\"center\" justifyContent=\"center\">\n        <Heading\n          as=\"h1\"\n          color=\"purple\"\n          fontSize=\"24px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"400\"\n          mr=\"15px\"\n        >\n          Phonebook\n        </Heading>\n        <AiOutlineApple color=\"purple\" fontSize=\"3em\" />\n      </Flex>\n      <ContactForm />\n      <Flex as=\"div\" alignItems=\"center\" justifyContent=\"center\">\n        <Heading\n          as=\"h2\"\n          color=\"purple\"\n          fontSize=\"24px\"\n          fontFamily=\"Raleway, sans-serif\"\n          fontWeight=\"400\"\n          mr=\"15px\"\n        >\n          Contacts\n        </Heading>\n        <AiOutlineUsergroupAdd color=\"purple\" fontSize=\"3em\" />\n      </Flex>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectValueFilter","filter","Filter","useSelector","dispatch","useDispatch","as","fontSize","fontFamily","fontWeight","htmlFor","display","flexDirection","alignItems","gap","color","I","name","type","id","value","onChange","e","onFilter","currentTarget","placeholder","boxShadow","bgGradient","outline","w","_hover","border","borderColor","nanoid","customAlphabet","schema","yup","shape","matches","required","number","initualValues","ContactForm","console","log","initialValues","validationSchema","onSubmit","values","resetForm","newContact","some","contact","alert","addContact","FormControl","Input","FormErrorMessage","component","pattern","title","size","mb","bg","Contact","mt","justifyContent","src","onClick","deleteContact","borderRadius","ml","background","ContactList","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","trim","listStyleType","backgroundColor","map","Contacts","minH","p","textAlign","m","lineHeight","mr"],"sourceRoot":""}